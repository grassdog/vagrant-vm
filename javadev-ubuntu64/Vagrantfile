Vagrant::Config.run do |config|
  vm_type = 'javadev'

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = 'precise64-unity'

  # The url from where the 'config.vm.box' box will be fetched.
  config.vm.box_url = 'http://dl.dropbox.com/u/36836372/precise64-unity-20120504.box'

  # Boot with a GUI so you can see the screen. (Default is headless)
  config.vm.boot_mode = :gui

  # Assign this VM a unique hostname
  config.vm.host_name = "#{ENV['USER']}.#{vm_type}.precise64.vagrantup.com"

  # Forward a port from the guest to the host (id, guest port, host port)
  #config.vm.forward_port 8080, 8080, :auto => true

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  config.vm.provision :puppet do |puppet|
    puppet.manifest_file = "#{vm_type}-ubuntu64.pp"
    puppet.module_path = '../modules'
  end

  # Share a folder to the VM (id, guest path, host path)
  config.vm.share_folder "vagrant-share", "/vagrant-share", "../share"

  # Set memory allocated to the VM in MB
  config.vm.customize ['modifyvm', :id, '--memory', '2048']
  config.vm.customize ['modifyvm', :id, '--cpus', '1']
  config.vm.customize ['modifyvm', :id, '--vram', '128']
  config.vm.customize ['modifyvm', :id, '--accelerate2dvideo', 'off']

  # Enable sound
  config.vm.customize ['modifyvm', :id, '--audio', 'coreaudio']
  config.vm.customize ['modifyvm', :id, '--audiocontroller', 'ac97']

  # Enable shared clipboard
  config.vm.customize ['modifyvm', :id, '--clipboard', 'bidirectional']

  # Use bridged networking rather than NAT
  #config.vm.network :bridged

  # https://gist.github.com/2155825
  config.vm.customize ['storagectl', :id, '--name', 'SATA Controller', '--hostiocache', 'on' ]
  config.vm.customize ['setextradata', :id, 'VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root', '1' ]

  # Create user-specific .gitconfig file
  gitconfig_file = File.expand_path(File.join(File.dirname(__FILE__), '../share/apps/gitconfig'))
  gitconfig_template = File.expand_path(File.join(File.dirname(__FILE__), '../share/conf/gitconfig.erb'))
  if !File.exists?(gitconfig_file)
    puts 'Enter your full name:'
    full_name = STDIN.gets.chomp
    puts 'Enter your email address:'
    email = STDIN.gets.chomp
    File.open(gitconfig_file, 'w') do |file|
      file.write(ERB.new(File.read(gitconfig_template)).result(binding))
    end
  end
end
